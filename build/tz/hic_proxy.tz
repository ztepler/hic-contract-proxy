{ parameter
    (or (or (or (or (unit %accept_ownership) (nat %cancel_swap)) (or (nat %collect) (unit %default)))
            (or (or (pair %execute
                       (lambda %lambda
                          (pair (pair (pair (pair (pair (address %administrator) (set %coreParticipants address))
                                                  (pair (bool %isPaused) (address %marketplaceAddress)))
                                            (pair (pair (address %minterAddress) (option %proposedAdministrator address))
                                                  (pair (address %registryAddress) (nat %residuals))))
                                      (pair (pair (pair (map %shares address nat) (nat %threshold))
                                                  (pair (address %tokenAddress) (nat %totalReceived)))
                                            (pair (nat %totalShares) (map %undistributed address nat))))
                                bytes)
                          (list operation))
                       (bytes %packedParams))
                    (pair %mint_OBJKT
                       (pair (address %address) (nat %amount))
                       (pair (bytes %metadata) (nat %royalties))))
                (or (pair %registry (bytes %metadata) (bytes %subjkt)) (nat %set_threshold))))
        (or (or (or (pair %swap
                       (pair (address %creator) (nat %objkt_amount))
                       (pair (nat %objkt_id) (pair (nat %royalties) (mutez %xtz_per_objkt))))
                    (list %transfer
                       (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                (or (unit %unregistry) (address %update_admin)))
            (or (list %update_operators
                   (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                       (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))
                (address %withdraw)))) ;
  storage
    (pair (pair (pair (pair (address %administrator) (set %coreParticipants address))
                      (pair (bool %isPaused) (address %marketplaceAddress)))
                (pair (pair (address %minterAddress) (option %proposedAdministrator address))
                      (pair (address %registryAddress) (nat %residuals))))
          (pair (pair (pair (map %shares address nat) (nat %threshold))
                      (pair (address %tokenAddress) (nat %totalReceived)))
                (pair (nat %totalShares) (map %undistributed address nat)))) ;
  code { LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} } ;
         LAMBDA nat mutez { PUSH mutez 1 ; SWAP ; MUL } ;
         LAMBDA
           unit
           unit
           { DROP ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { UNIT }
                { PUSH string "This entrypoint should not receive tez" ; FAILWITH } } ;
         LAMBDA
           (pair (pair (pair (pair address (set address)) (pair bool address))
                       (pair (pair address (option address)) (pair address nat)))
                 (pair (pair (pair (map address nat) nat) (pair address nat)) (pair nat (map address nat))))
           unit
           { CAR ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { UNIT }
                { PUSH string "Entrypoint can call only administrator" ; FAILWITH } } ;
         LAMBDA
           (pair address
                 (pair (pair (pair (pair address (set address)) (pair bool address))
                             (pair (pair address (option address)) (pair address nat)))
                       (pair (pair (pair (map address nat) nat) (pair address nat)) (pair nat (map address nat)))))
           nat
           { UNPAIR ;
             SWAP ;
             CDR ;
             CDR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 3 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP 2 ;
                         UNIT ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         IF_NONE { PUSH string "Not proposed admin" ; FAILWITH } {} ;
                         DUP ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              NONE address ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR }
                            { DROP ; PUSH string "Not proposed admin" ; FAILWITH } ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CONTRACT %cancel_swap nat ;
                         IF_NONE { PUSH string "No marketplace found" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { IF_LEFT
                       { DIG 2 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 3 ;
                         SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CONTRACT %collect nat ;
                         IF_NONE { PUSH string "No marketplace found" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 3 ;
                         DIG 4 ;
                         DROP 3 ;
                         AMOUNT ;
                         PUSH mutez 1 ;
                         SWAP ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         ADD ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PUSH nat 0 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CDR ;
                                DUP 3 ;
                                CDR ;
                                CAR ;
                                DUP 3 ;
                                CDR ;
                                CDR ;
                                CAR ;
                                DUP 5 ;
                                CDR ;
                                CDR ;
                                DUP 7 ;
                                MUL ;
                                EDIV ;
                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                CAR ;
                                DUP ;
                                DUP 6 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                ADD ;
                                DUP 5 ;
                                DUP 4 ;
                                PAIR ;
                                DUP 9 ;
                                SWAP ;
                                EXEC ;
                                DIG 2 ;
                                ADD ;
                                DUP 5 ;
                                CDR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                GE ;
                                IF { DUP 5 ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     PUSH nat 0 ;
                                     DUP 5 ;
                                     SWAP ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     DUP 6 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DUP 6 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DIG 5 ;
                                     CAR ;
                                     PAIR ;
                                     PAIR }
                                   { PUSH nat 0 ;
                                     DUP 6 ;
                                     CDR ;
                                     CDR ;
                                     CDR ;
                                     DIG 2 ;
                                     DUP 5 ;
                                     SWAP ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     DUP 6 ;
                                     CDR ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DUP 6 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DIG 5 ;
                                     CAR ;
                                     PAIR ;
                                     PAIR } ;
                                DIG 2 ;
                                DUP 9 ;
                                SWAP ;
                                EXEC ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DUP 9 ;
                                SWAP ;
                                EXEC ;
                                DUP ;
                                DUG 2 ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                PUSH mutez 0 ;
                                DIG 2 ;
                                COMPARE ;
                                GT ;
                                IF { DIG 3 ; SWAP ; CONS } { DROP ; DIG 2 } ;
                                DIG 3 ;
                                CAR ;
                                UNPAIR ;
                                CDR ;
                                DIG 4 ;
                                PAIR ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 3 ;
                                CAR ;
                                DIG 2 ;
                                CAR ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                CAR ;
                                PAIR } ;
                         DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DROP 3 ;
                         DUP ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         DIG 3 ;
                         SUB ;
                         PUSH int 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         GE ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SWAP ;
                              ABS ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR }
                            { DROP ; PUSH string "Wrong share configuration" ; FAILWITH } ;
                         SWAP ;
                         CDR ;
                         PAIR } } }
               { DIG 2 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 3 ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         DUP 3 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         SWAP ;
                         EXEC ;
                         PAIR }
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CONTRACT %mint_OBJKT
                           (pair (pair (address %address) (nat %amount)) (pair (bytes %metadata) (nat %royalties))) ;
                         IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { IF_LEFT
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CONTRACT %registry (pair (bytes %metadata) (bytes %subjkt)) ;
                         IF_NONE { PUSH string "No registry found" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } } } }
           { IF_LEFT
               { DIG 2 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 3 ;
                 IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CONTRACT %swap
                           (pair (pair (address %creator) (nat %objkt_amount))
                                 (pair (nat %objkt_id) (pair (nat %royalties) (mutez %xtz_per_objkt)))) ;
                         IF_NONE { PUSH string "No marketplace found" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONTRACT %transfer
                           (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                         IF_NONE { PUSH string "No FA2 contract found" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { IF_LEFT
                       { DROP ;
                         UNIT ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CONTRACT %unregistry unit ;
                         IF_NONE { PUSH string "No registry found" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { SWAP ;
                         UNIT ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         SOME ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } } }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 3 ;
                     SWAP ;
                     UNIT ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CONTRACT %update_operators
                       (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                 (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
                     IF_NONE { PUSH string "No FA2 contract found" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     UNIT ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 4 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PUSH nat 0 ;
                     DIG 4 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } } } ;
  view "get_total_shares" unit nat { CDR ; CDR ; CDR ; CAR } ;
  view "get_total_received" unit nat { CDR ; CDR ; CAR ; CDR ; CDR } ;
  view "get_administrator" unit address { CDR ; CAR ; CAR ; CAR ; CAR } ;
  view "get_core_participants" unit (set address) { CDR ; CAR ; CAR ; CAR ; CDR } ;
  view "get_shares" unit (map address nat) { CDR ; CDR ; CAR ; CAR ; CAR } }

