{ PUSH (lambda (pair string (big_map string bytes)) address)
       { UNPAIR ;
         GET ;
         IF_NONE { PUSH string "Record is not found" ; FAILWITH } {} ;
         UNPACK address ;
         IF_NONE { PUSH string "Unpack failed" ; FAILWITH } {} } ;
  PAIR ;
  { UNPAIR ;
    SWAP ;
    UNPAIR ;
    SWAP ;
    UNPACK (map address (pair (bool %isCore) (nat %share))) ;
    IF_NONE { PUSH string "Unpack failed" ; FAILWITH } {} ;
    EMPTY_SET address ;
    PUSH nat 0 ;
    EMPTY_MAP address nat ;
    PAIR ;
    PAIR ;
    SWAP ;
    DUP ;
    DUG 2 ;
    ITER { SWAP ;
           PAIR ;
           DUP ;
           CAR ;
           CDR ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CDR ;
           CAR ;
           DUP 3 ;
           CDR ;
           CDR ;
           DUP ;
           CDR ;
           DUP 5 ;
           CAR ;
           CAR ;
           CDR ;
           ADD ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CAR ;
           IF { DIG 3 ; DUP 4 ; PUSH bool True ; SWAP ; UPDATE } { DIG 3 } ;
           DUP 5 ;
           CAR ;
           UNPAIR ;
           CDR ;
           DIG 6 ;
           CAR ;
           CAR ;
           CAR ;
           DIG 5 ;
           CDR ;
           DIG 6 ;
           SWAP ;
           SOME ;
           SWAP ;
           UPDATE ;
           PAIR ;
           PAIR ;
           DUP ;
           CDR ;
           DIG 3 ;
           DIG 2 ;
           CAR ;
           CAR ;
           PAIR ;
           PAIR ;
           CAR ;
           PAIR } ;
    DUP ;
    CAR ;
    CDR ;
    PUSH nat 0 ;
    SWAP ;
    DUP ;
    DUG 2 ;
    COMPARE ;
    EQ ;
    IF { PUSH string "Sum of the shares should be more than 0n" ; FAILWITH } {} ;
    PUSH nat 1000000000000 ;
    SWAP ;
    DUP ;
    DUG 2 ;
    COMPARE ;
    GT ;
    IF { PUSH string "The maximum shares is 10**12" ; FAILWITH } {} ;
    PUSH nat 108 ;
    DIG 3 ;
    SIZE ;
    COMPARE ;
    GT ;
    IF { PUSH string "The maximum participants count is 108" ; FAILWITH } {} ;
    DUP 3 ;
    PUSH string "hicTokenAddress" ;
    PAIR ;
    DUP 5 ;
    SWAP ;
    EXEC ;
    PAIR ;
    SWAP ;
    DUP ;
    DUG 2 ;
    CAR ;
    CAR ;
    DUP 4 ;
    PUSH string "hicRegistryAddress" ;
    PAIR ;
    DUP 6 ;
    SWAP ;
    EXEC ;
    PAIR ;
    NONE address ;
    DUP 5 ;
    PUSH string "hicMinterAddress" ;
    PAIR ;
    DUP 7 ;
    SWAP ;
    EXEC ;
    PAIR ;
    PAIR ;
    DIG 3 ;
    PUSH string "hicMarketplaceAddress" ;
    PAIR ;
    DIG 4 ;
    SWAP ;
    EXEC ;
    PUSH bool False ;
    PAIR ;
    DIG 3 ;
    CDR ;
    SENDER ;
    PAIR ;
    PAIR ;
    PAIR ;
    PAIR ;
    PUSH mutez 0 ;
    NONE key_hash ;
    PAIR ;
    PAIR ;
    { UNPAIR ; UNPAIR } ;
    CREATE_CONTRACT
      { parameter
          (or (or (or (or (or (unit %accept_ownership) (nat %cancel_swap))
                          (or (nat %collect) (pair %curate (nat %hDAO_amount) (nat %objkt_id))))
                      (or (or (unit %default)
                              (pair %execute
                                 (lambda %lambda
                                    (pair (pair (pair (pair (pair (address %administrator) (set %coreParticipants address))
                                                            (pair (bool %isPaused) (address %marketplaceAddress)))
                                                      (pair (pair (address %minterAddress) (option %proposedAdministrator address))
                                                            (pair (address %registryAddress) (map %shares address nat))))
                                                (pair (address %tokenAddress) (nat %totalShares)))
                                          bytes)
                                    (list operation))
                                 (bytes %packedParams)))
                          (or (pair %get_participant_shares
                                 (contract %callback nat)
                                 (address %participantAddress))
                              (contract %get_total_shares nat))))
                  (or (or (or (pair %is_administrator (contract %callback bool) (address %participantAddress))
                              (pair %is_core_participant
                                 (contract %callback bool)
                                 (address %participantAddress)))
                          (or (pair %mint_OBJKT
                                 (pair (address %address) (nat %amount))
                                 (pair (bytes %metadata) (nat %royalties)))
                              (pair %registry (bytes %metadata) (bytes %subjkt))))
                      (or (or (pair %swap
                                 (pair (address %creator) (nat %objkt_amount))
                                 (pair (nat %objkt_id) (pair (nat %royalties) (mutez %xtz_per_objkt))))
                              (list %transfer
                                 (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                          (or (unit %trigger_pause) (unit %unregistry)))))
              (or (address %update_admin)
                  (list %update_operators
                     (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                         (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))) ;
        storage
          (pair (pair (pair (pair (address %administrator) (set %coreParticipants address))
                            (pair (bool %isPaused) (address %marketplaceAddress)))
                      (pair (pair (address %minterAddress) (option %proposedAdministrator address))
                            (pair (address %registryAddress) (map %shares address nat))))
                (pair (address %tokenAddress) (nat %totalShares))) ;
        code { LAMBDA
                 unit
                 unit
                 { DROP ;
                   PUSH mutez 0 ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF { UNIT }
                      { PUSH string "This entrypoint should not receive tez" ; FAILWITH } } ;
               LAMBDA
                 (pair (pair (pair (pair address (set address)) (pair bool address))
                             (pair (pair address (option address)) (pair address (map address nat))))
                       (pair address nat))
                 unit
                 { CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { UNIT }
                      { PUSH string "Entrypoint can call only administrator" ; FAILWITH } } ;
               LAMBDA
                 (pair (pair (pair (pair address (set address)) (pair bool address))
                             (pair (pair address (option address)) (pair address (map address nat))))
                       (pair address nat))
                 unit
                 { CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   IF { PUSH string "Contract is paused" ; FAILWITH } { UNIT } } ;
               DIG 3 ;
               UNPAIR ;
               IF_LEFT
                 { IF_LEFT
                     { IF_LEFT
                         { IF_LEFT
                             { IF_LEFT
                                 { DIG 2 ;
                                   DIG 3 ;
                                   DROP 3 ;
                                   UNIT ;
                                   DIG 2 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   IF_NONE { PUSH string "Not proposed admin" ; FAILWITH } {} ;
                                   DUP ;
                                   SENDER ;
                                   COMPARE ;
                                   EQ ;
                                   IF { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        NONE address ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR }
                                      { DROP ; PUSH string "Not proposed admin" ; FAILWITH } ;
                                   NIL operation ;
                                   PAIR }
                                 { SWAP ;
                                   UNIT ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CONTRACT %cancel_swap nat ;
                                   IF_NONE { PUSH string "No marketplace found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } }
                             { IF_LEFT
                                 { SWAP ;
                                   UNIT ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CONTRACT %collect nat ;
                                   IF_NONE { PUSH string "No marketplace found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR }
                                 { SWAP ;
                                   UNIT ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   CONTRACT %curate (pair (nat %hDAO_amount) (nat %objkt_id)) ;
                                   IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } } }
                         { IF_LEFT
                             { DIG 4 ;
                               DROP ;
                               IF_LEFT
                                 { DIG 2 ;
                                   DIG 3 ;
                                   DROP 3 ;
                                   AMOUNT ;
                                   PUSH mutez 1 ;
                                   SWAP ;
                                   EDIV ;
                                   IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                   CAR ;
                                   PUSH nat 0 ;
                                   NIL operation ;
                                   PUSH nat 0 ;
                                   PAIR ;
                                   PAIR ;
                                   DUP 3 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   ITER { SWAP ;
                                          PAIR ;
                                          DUP ;
                                          CAR ;
                                          CAR ;
                                          CDR ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          CAR ;
                                          CDR ;
                                          PUSH nat 1 ;
                                          DUP 4 ;
                                          CAR ;
                                          CAR ;
                                          CAR ;
                                          ADD ;
                                          DUP 6 ;
                                          CAR ;
                                          CDR ;
                                          CDR ;
                                          CDR ;
                                          SIZE ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { SWAP ; DUP ; DUG 2 ; DUP 6 ; SUB ; ABS }
                                             { DUP 6 ;
                                               CDR ;
                                               CDR ;
                                               DUP 5 ;
                                               CDR ;
                                               CDR ;
                                               DUP 7 ;
                                               MUL ;
                                               EDIV ;
                                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                               CAR } ;
                                          DUP 5 ;
                                          CDR ;
                                          CAR ;
                                          CONTRACT unit ;
                                          IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
                                          PUSH mutez 1 ;
                                          DUP 3 ;
                                          MUL ;
                                          DUP ;
                                          DUG 2 ;
                                          UNIT ;
                                          TRANSFER_TOKENS ;
                                          DIG 2 ;
                                          DIG 4 ;
                                          ADD ;
                                          DIG 5 ;
                                          CAR ;
                                          UNPAIR ;
                                          CDR ;
                                          DIG 5 ;
                                          PAIR ;
                                          PAIR ;
                                          DUP ;
                                          CDR ;
                                          PUSH mutez 0 ;
                                          DIG 5 ;
                                          COMPARE ;
                                          GT ;
                                          IF { DIG 4 ; DIG 4 ; CONS } { DIG 3 ; DROP ; DIG 3 } ;
                                          DIG 2 ;
                                          CAR ;
                                          CAR ;
                                          PAIR ;
                                          PAIR ;
                                          CAR ;
                                          PAIR } ;
                                   SWAP ;
                                   DROP ;
                                   CAR ;
                                   CDR ;
                                   PAIR }
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   CDR ;
                                   DUP 3 ;
                                   PAIR ;
                                   SWAP ;
                                   CAR ;
                                   SWAP ;
                                   EXEC ;
                                   PAIR } }
                             { DIG 2 ;
                               DIG 3 ;
                               DROP 2 ;
                               IF_LEFT
                                 { SWAP ;
                                   UNIT ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   PUSH mutez 0 ;
                                   DUP 3 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   DIG 4 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH nat 0 } {} ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR }
                                 { SWAP ;
                                   UNIT ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   SWAP ;
                                   PUSH mutez 0 ;
                                   DUP 3 ;
                                   CDR ;
                                   CDR ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } } } }
                     { IF_LEFT
                         { IF_LEFT
                             { DIG 2 ;
                               DIG 3 ;
                               DROP 2 ;
                               IF_LEFT
                                 { SWAP ;
                                   UNIT ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   PUSH mutez 0 ;
                                   DIG 3 ;
                                   CDR ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR }
                                 { SWAP ;
                                   UNIT ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   PUSH mutez 0 ;
                                   DUP 3 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 4 ;
                                   CDR ;
                                   MEM ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } }
                             { IF_LEFT
                                 { SWAP ;
                                   UNIT ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   CONTRACT %mint_OBJKT
                                     (pair (pair (address %address) (nat %amount)) (pair (bytes %metadata) (nat %royalties))) ;
                                   IF_NONE { PUSH string "No minter found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR }
                                 { SWAP ;
                                   UNIT ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   CONTRACT %registry (pair (bytes %metadata) (bytes %subjkt)) ;
                                   IF_NONE { PUSH string "No registry found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } } }
                         { IF_LEFT
                             { IF_LEFT
                                 { SWAP ;
                                   UNIT ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CONTRACT %swap
                                     (pair (pair (address %creator) (nat %objkt_amount))
                                           (pair (nat %objkt_id) (pair (nat %royalties) (mutez %xtz_per_objkt)))) ;
                                   IF_NONE { PUSH string "No marketplace found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR }
                                 { SWAP ;
                                   UNIT ;
                                   DIG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   CONTRACT %transfer
                                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                   IF_NONE { PUSH string "No FA2 contract found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } }
                             { IF_LEFT
                                 { DIG 2 ;
                                   DROP 2 ;
                                   UNIT ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 2 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CDR ;
                                   DUP 3 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   NOT ;
                                   PAIR ;
                                   DIG 3 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   NIL operation ;
                                   PAIR }
                                 { DROP ;
                                   UNIT ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 3 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   DIG 2 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   DUP ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   CONTRACT %unregistry unit ;
                                   IF_NONE { PUSH string "No registry found" ; FAILWITH } {} ;
                                   PUSH mutez 0 ;
                                   UNIT ;
                                   TRANSFER_TOKENS ;
                                   SWAP ;
                                   NIL operation ;
                                   DIG 2 ;
                                   CONS ;
                                   PAIR } } } } }
                 { IF_LEFT
                     { DIG 2 ;
                       DROP ;
                       SWAP ;
                       UNIT ;
                       DIG 4 ;
                       SWAP ;
                       EXEC ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       SWAP ;
                       EXEC ;
                       DROP ;
                       DUP ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       DIG 3 ;
                       SOME ;
                       DUP 4 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       DIG 2 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       NIL operation ;
                       PAIR }
                     { SWAP ;
                       UNIT ;
                       DIG 5 ;
                       SWAP ;
                       EXEC ;
                       DROP ;
                       DUP ;
                       DIG 4 ;
                       SWAP ;
                       EXEC ;
                       DROP ;
                       DUP ;
                       DIG 3 ;
                       SWAP ;
                       EXEC ;
                       DROP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       CAR ;
                       CONTRACT %update_operators
                         (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                   (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
                       IF_NONE { PUSH string "No FA2 contract found" ; FAILWITH } {} ;
                       PUSH mutez 0 ;
                       DIG 2 ;
                       TRANSFER_TOKENS ;
                       SWAP ;
                       NIL operation ;
                       DIG 2 ;
                       CONS ;
                       PAIR } } } } ;
    PAIR ;
    DUP ;
    CAR ;
    PUSH string "hic_proxy" ;
    PACK ;
    DIG 2 ;
    CDR ;
    PAIR ;
    PAIR } }

